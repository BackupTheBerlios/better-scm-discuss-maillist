From lasse-list-scm-discuss-2009 at mail.plastictree.net  Tue May  5 23:24:20 2009
From: lasse-list-scm-discuss-2009 at mail.plastictree.net (Lasse Kliemann)
Date: Tue, 5 May 2009 23:24:20 +0200
Subject: Distributed VCS with good user verification?
Message-ID: <20090505212420.GC2761@lasse.mail.plastictre.net>

This list hasn't seen any traffic for over a year, but since 
usually no-one unsubscribes from a list with no traffic, I hope 
someone will read this.


I am looking for a VCS that makes it easy to see who committed 
which revision and to be certain that this information is 
correct.

When I look at the commit log, I want to see at a glance who 
committed which revision. I want to be sure that those names 
displayed are really meaningful. That is, it should be guaranteed 
that in fact that person which I associate with the displayed 
name has committed the respective revision.

In Subversion, a centralized VCS, this can be ensured by 
correctly setting '--tunnel-user=USER' on the server, when using 
SSH. Then, a user authenticates himself by his SSH key, then the 
SSH server picks the corresponding entry in 
'~/.ssh/authorized_keys', and this will cause the intended user 
name to be recorded as the committer.

In a distributed VCS, this is no option since commits happen 
locally. Instead, revisions must be cryptographically signed.  
However, signing is not everything. In addition, signatures must 
be verified, and the commit log should reflect which commits have 
valid signatures and wich not.

I tested several systems in this respect without finding any 100% 
satisfactory solution.

Here is what I found:

- Mercurial provides an extension to explicitly sign certain 
  revisions. The act of signing creates a new revision by itself. 
  It seems like there is no way of automatically checking all 
  signatures or to detect revisions without signatures.

- Git only allows to sign tags and to verify those signatures on 
  demand.

- Monotone has mandatory signatures, which looks rather good to 
  me. However, the monotone server does not support encryption 
  and also does not seem to support SSH tunneling in a convenient 
  way (like most other systems, by calling 'ssh'), but only by a 
  "real" tunnel (opening a local port and such). So, 
  unfortunately, monotone is ruled out by this other criterion.

- Bazaar can sign revisions, and it can be told to sign each and 
  every revision upon commit. However, I did not find any 
  built-in way to check signatures. There is an option 
  'check_signatures' which can be set to 'required', but I could 
  not find out what it does actually. It is not documented.

  There is a plugin for Bazaar, however, with which one can get 
  statistics on how many revisions are signed and which 
  signatures cause problems. When this statistics says that 
  everything is signed and okay, then one can trust the user 
  names in the commit log.

Bottom line is that Bazaar is closest to my needs, but not yet 100%.

Suggestions?

Thank you!
Lasse

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 835 bytes
Desc: not available
URL: <https://lists.berlios.de/pipermail/better-scm-discuss/attachments/20090505/d0d94f67/attachment.pgp>

From ydirson at altern.org  Sun May 10 21:59:07 2009
From: ydirson at altern.org (Yann Dirson)
Date: Sun, 10 May 2009 21:59:07 +0200
Subject: Distributed VCS with good user verification?
In-Reply-To: <20090505212420.GC2761@lasse.mail.plastictre.net>
References: <20090505212420.GC2761@lasse.mail.plastictre.net>
Message-ID: <20090510195907.GA5994@nan92-1-81-57-214-146.fbx.proxad.net>

On Tue, May 05, 2009 at 11:24:20PM +0200, Lasse Kliemann wrote:
> This list hasn't seen any traffic for over a year, but since 
> usually no-one unsubscribes from a list with no traffic, I hope 
> someone will read this.
> 
> 
> I am looking for a VCS that makes it easy to see who committed 
> which revision and to be certain that this information is 
> correct.
> 
> When I look at the commit log, I want to see at a glance who 
> committed which revision. I want to be sure that those names 
> displayed are really meaningful. That is, it should be guaranteed 
> that in fact that person which I associate with the displayed 
> name has committed the respective revision.
> 
> In Subversion, a centralized VCS, this can be ensured by 
> correctly setting '--tunnel-user=USER' on the server, when using 
> SSH. Then, a user authenticates himself by his SSH key, then the 
> SSH server picks the corresponding entry in 
> '~/.ssh/authorized_keys', and this will cause the intended user 
> name to be recorded as the committer.
> 
> In a distributed VCS, this is no option since commits happen 
> locally. Instead, revisions must be cryptographically signed.  
> However, signing is not everything. In addition, signatures must 
> be verified, and the commit log should reflect which commits have 
> valid signatures and wich not.


If you're only relying on an ssh tunnel for svn, I suppose it should
be OK for you as well to use this mechanism with a DSCM.  If so,
gitosis provides the necessay infrastucture to do so comfortably on
top of git (gitosis upstream does not seem very active, but there is
at least one gentoo person writing patches, and I registered a mirror
of his repository as a fork on http://repo.or.cz/w/gitosis.git.  FWIW,
I have started to make a couple of cleanups of this code recently, and
will push them as another fork shortly).

OTOH, it does enforce a centralized verification scheme.  If you want
something more flexible, I believe that could easily be done on top of
commit notes (development for that feature has unfortunately stalled
AFAIK).  I'm cc'ing the git list so others have the opportunity to
comment.

> 
> I tested several systems in this respect without finding any 100% 
> satisfactory solution.
> 
> Here is what I found:
> 
> - Mercurial provides an extension to explicitly sign certain 
>   revisions. The act of signing creates a new revision by itself. 
>   It seems like there is no way of automatically checking all 
>   signatures or to detect revisions without signatures.
> 
> - Git only allows to sign tags and to verify those signatures on 
>   demand.
> 
> - Monotone has mandatory signatures, which looks rather good to 
>   me. However, the monotone server does not support encryption 
>   and also does not seem to support SSH tunneling in a convenient 
>   way (like most other systems, by calling 'ssh'), but only by a 
>   "real" tunnel (opening a local port and such). So, 
>   unfortunately, monotone is ruled out by this other criterion.
> 
> - Bazaar can sign revisions, and it can be told to sign each and 
>   every revision upon commit. However, I did not find any 
>   built-in way to check signatures. There is an option 
>   'check_signatures' which can be set to 'required', but I could 
>   not find out what it does actually. It is not documented.
> 
>   There is a plugin for Bazaar, however, with which one can get 
>   statistics on how many revisions are signed and which 
>   signatures cause problems. When this statistics says that 
>   everything is signed and okay, then one can trust the user 
>   names in the commit log.
> 
> Bottom line is that Bazaar is closest to my needs, but not yet 100%.
> 
> Suggestions?
> 
> Thank you!
> Lasse
> 



> _______________________________________________
> Better-scm-discuss mailing list
> Better-scm-discuss at lists.berlios.de
> https://lists.berlios.de/mailman/listinfo/better-scm-discuss



From bsd at cs.ubc.ca  Thu May 28 02:02:42 2009
From: bsd at cs.ubc.ca (Brian de Alwis)
Date: Wed, 27 May 2009 18:02:42 -0600
Subject: Survey on DVCS usage and experience
Message-ID: <EEB2C0EF-F774-42DE-8B92-AF8522A4F318@cs.ubc.ca>

Hello everybody.  I'm part of a team conducting a survey to understand
the perceived benefits and challenges of using a decentralized or
distributed version control systems (DVCS) in software development.
If you either use or have used a DVCS, and are over 18 years old,
we would like to invite you to participate in our survey and share
your experiences.  Details on partcipating are below.  Thanks for
your time!

Brian.

[Posted from my cs.ubc.ca account as it was my subscribed account for  
better-scm.]

----------------------------------------------------------------------
An increasing number of software projects have or are considering
switching their code repositories to a decentralized or distributed
VCS (DVCS).  There are many such DVCS tools, including git, bzr,
mercurial, monotone, or bitkeeper.  We are conducting a survey to
assess the perceived benefits and challenges of using a DVCS.  We
would ask that any individuals who use or are comfortable using a
DVCS for managing the artifacts for a project to please consider
completing the survey.  The survey has several open-ended questions,
and may take up to 20 minutes to complete.

The data collected from this study will be used in articles for
publication in journals and conference proceedings.  The results
of this study will provide additional knowledge and guidance for
projects considering moving to using a DVCS.

This is an anonymous survey.  Any personal information divulged
in answering a question will be kept strictly confidential.

The survey is at:

     http://www.cs.usask.ca/~bsd178/research/dvcs-survey/

Please feel free to redistribute this to other interested groups.

If you would like more detail about the survey, or information not
included here, please contact us.

     Brian de Alwis
     Department of Computer Science
     University of Saskatchewan
     brian.de.alwis at usask.ca

This research has the ethical approval of the Research Ethics Office
at the University of Saskatchewan.  If you have any concerns about your
treatment or rights as a research subject, please contact the office
at 306-966-2084.

----------------------------------------------------------------------

-- 
"Amusement to an observing mind is study." - Benjamin Disraeli



